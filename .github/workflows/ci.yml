name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

env:
  UV_VERSION: 0.6.11
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    strategy:
      matrix:
        python-version: [3.11, 3.12]
        os: [ubuntu-24.04]

    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    steps:
      - name: Ensure /opt/hostedtoolcache exists (for self-hosted runners)
        run: sudo mkdir -p /opt/hostedtoolcache/Python && sudo chown runner:runner /opt/hostedtoolcache/Python

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/$UV_VERSION/install.sh | sh

      - name: Install dependencies
        run: uv sync

      - name: Check for linter errors
        run: uv run ruff check

      - name: Run tests
        run: uv run python manage.py test

  # https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images
  build-and-publish:
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        # https://github.com/docker/login-action
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        # https://github.com/docker/metadata-action
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        # https://github.com/docker/build-push-action
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        # https://github.com/actions/attest-build-provenance
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
