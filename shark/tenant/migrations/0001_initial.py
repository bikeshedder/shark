# Generated by Django 5.0.3 on 2024-03-14 10:58

import django.db.models.deletion
import django_countries.fields
import localflavor.generic.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("project", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created_at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated_at"),
                ),
                (
                    "invoice_dispatch_type",
                    models.CharField(
                        choices=[("email", "via email"), ("mail", "via mail")],
                        default="email",
                        max_length=20,
                        verbose_name="Invoice dispatch type",
                    ),
                ),
                (
                    "payment_timeframe_days",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("address_name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "address_address_addition_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="address addition (1st row)",
                    ),
                ),
                (
                    "address_address_addition_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="address addition (2nd row)",
                    ),
                ),
                (
                    "address_street",
                    models.CharField(max_length=100, verbose_name="street"),
                ),
                (
                    "address_street_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="street number"
                    ),
                ),
                ("address_city", models.CharField(max_length=100, verbose_name="city")),
                (
                    "address_postal_code",
                    models.CharField(max_length=10, verbose_name="postal code"),
                ),
                ("address_state", models.CharField(blank=True, max_length=100)),
                (
                    "address_country",
                    django_countries.fields.CountryField(
                        max_length=2, verbose_name="country"
                    ),
                ),
                (
                    "customer_number_generator",
                    models.CharField(
                        choices=[("INITNUM", "Initial as number Generator")],
                        default="INITNUM",
                    ),
                ),
                (
                    "invoice_number_generator",
                    models.CharField(
                        choices=[
                            ("YEARCUSTN", "Year - Customer - N"),
                            ("CUSTYEARN", "Customer - Year - N"),
                        ],
                        default="CUSTYEARN",
                    ),
                ),
                (
                    "creditor_id",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="creditor id"
                    ),
                ),
                (
                    "creditor_name",
                    models.CharField(
                        blank=True, max_length=70, verbose_name="creditor name"
                    ),
                ),
                (
                    "creditor_country",
                    models.CharField(
                        blank=True, max_length=2, verbose_name="creditor country"
                    ),
                ),
                (
                    "creditor_iban",
                    localflavor.generic.models.IBANField(
                        blank=True,
                        include_countries=None,
                        max_length=34,
                        use_nordea_extensions=False,
                        verbose_name="creditor IBAN",
                    ),
                ),
                (
                    "creditor_bic",
                    localflavor.generic.models.BICField(
                        blank=True, max_length=11, verbose_name="creditor BIC"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TenantMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created_at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated_at"),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Admin"),
                            ("EMPLOYEE", "Employee"),
                            ("CUST_REP", "Customer Representative"),
                        ],
                        max_length=10,
                    ),
                ),
                ("projects", models.ManyToManyField(blank=True, to="project.project")),
                (
                    "tenant",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tenant.tenant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
